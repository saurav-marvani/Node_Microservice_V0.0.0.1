let express,createError,morgan,dotenv,expressjwt,jwksClient;_b42‍.w("express",[["default",["express"],function(v){express=v}]]);_b42‍.w("http-errors",[["default",["createError"],function(v){createError=v}]]);_b42‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_b42‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_b42‍.w("express-jwt",[["expressjwt",["expressjwt"],function(v){expressjwt=v}]]);_b42‍.w("jwks-rsa",[["default",["jwksClient"],function(v){jwksClient=v}]]);



dotenv.config();





const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(morgan('dev'));

app.use(expressjwt({
  secret: jwksClient.expressJwtSecret({
    jwksUri: 'http://localhost:4000/.well-known/jwks.json',
    cache: true,
    rateLimit: true
  }),
  algorithms: ['RS256']
}).unless({ path: ['/'] })
)

app.get('/', async (req, res, next) => {
  res.send({ message: 'This is resource route 🐻' });
});

app.get('/protected', async (req, res, next) => {
  res.send({ message: 'THIS IS PROTECTED ROUTE 🐻' });
});

app.use((req, res, next) => {
  next(createError.NotFound());
});

app.use((err, req, res, next) => {
  res.status(err.status || 500);
  res.send({
    status: err.status || 500,
    message: err.message,
  });
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`🚀 @ http://localhost:${PORT}👋👋👋👋👋`));
